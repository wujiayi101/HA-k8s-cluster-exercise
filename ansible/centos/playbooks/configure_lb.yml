---
- hosts: loadbalancers
  become: yes
  vars_files:
  - env_variables
  tasks:

  - name: Install firewalld
    yum:
      name: firewalld
      state: present
    become: true

  - name: Starting and Enabling firewalld
    service:
     name: firewalld
     state: started
     enabled: yes

  - name: Allow Network Ports in Firewalld
    ansible.posix.firewalld:
     port: "{{ item }}"
     state: enabled
     permanent: yes
     immediate: yes
    with_items: "{{ lb_ports }}"

  - name: Allow masquerading in Firewalld
    ansible.posix.firewalld:
      masquerade: "yes"
      state: enabled
      permanent: yes
      immediate: yes

  - name: Uninstall HAProxy package
    yum:
      name: haproxy
      state: absent
    become: true

  - name: Install HAProxy package
    yum:
      name: haproxy
      state: present
    become: true

  - name: Put SELinux in permissive mode
    ansible.posix.selinux:
      policy: targeted
      state: permissive

  - name: Append proxy configuration block
    blockinfile:
      path: /etc/haproxy/haproxy.cfg
      block: |
        frontend n8n
            bind *:80
            bind :443 ssl crt /etc/haproxy/mycert.pem  # Currently this cert should be 'manually' created using letsencrypt/certbot
            http-request redirect scheme https unless { ssl_fc }
            mode tcp

            acl ACL_n8n.wu101.com hdr(host) -i n8n.wu101.com
            use_backend n8n-backend if ACL_n8n.wu101.com

            acl ACL_kube.wu101.com hdr(host) -i kube.wu101.com
            use_backend k8s-backend if ACL_kube.wu101.com

        backend n8n-backend
            balance roundrobin
            mode tcp
            server worker1 {{ worker1_addr }}:30008 check
            server worker2 {{ worker2_addr }}:30008 check

        backend k8s-backend
            mode tcp
            balance roundrobin
            server master1 {{ master1_addr }}:6443 check
            server master2 {{ master2_addr }}:6443 check
            server master3 {{ master3_addr }}:6443 check

  - name: Restart haproxy
    service:
      name: haproxy
      state: restarted